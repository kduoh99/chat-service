name: Deploy to EC2

on:
  push:
    branches:
      - main
    paths:
      - 'chat-server/**'
      - '.github/workflows/deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Generate application-prod.yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > src/main/resources/application-prod.yml

      - name: Build Docker image (M1-safe)
        run: docker build --platform linux/amd64 -t chat-server .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Tag Docker image
        run: docker tag chat-server ${{ steps.login-ecr.outputs.registry }}/chat-server:latest

      - name: Push Docker image to ECR
        run: docker push ${{ steps.login-ecr.outputs.registry }}/chat-server:latest

      - name: Deploy to EC2 and run 2 containers
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            docker stop app1 || true
            docker rm app1 || true
            docker stop app2 || true
            docker rm app2 || true

            docker pull ${{ steps.login-ecr.outputs.registry }}/chat-server:latest

            docker run -d --name app1 -p 8080:8080 \
              -e SPRING_PROFILES_ACTIVE=prod \
              ${{ steps.login-ecr.outputs.registry }}/chat-server:latest

            docker run -d --name app2 -p 8081:8080 \
              -e SPRING_PROFILES_ACTIVE=prod \
              ${{ steps.login-ecr.outputs.registry }}/chat-server:latest
